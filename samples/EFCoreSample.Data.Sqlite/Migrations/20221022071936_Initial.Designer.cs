// <auto-generated />
using System;
using EFCoreSample.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreSample.Data.Sqlite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221022071936_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("EFCoreSample.Data.Entities.Alphabet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Characters")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Script")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alphabets");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.CharacterOnGrid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AlphabetId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DataGridId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlphabetId");

                    b.HasIndex("DataGridId");

                    b.ToTable("CharacterOnGrids");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.DataGrid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Column")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataGrids");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.Direction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColumnMovement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DirectionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RowMovement")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.WordOnGrid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DataGridId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DirectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("WordSetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DataGridId");

                    b.HasIndex("DirectionId");

                    b.HasIndex("WordSetId");

                    b.ToTable("WordOnGrids");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.WordSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Words")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WordSets");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.CharacterOnGrid", b =>
                {
                    b.HasOne("EFCoreSample.Data.Entities.Alphabet", "Alphabet")
                        .WithMany()
                        .HasForeignKey("AlphabetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreSample.Data.Entities.DataGrid", null)
                        .WithMany("CharacterOnGrids")
                        .HasForeignKey("DataGridId");

                    b.Navigation("Alphabet");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.WordOnGrid", b =>
                {
                    b.HasOne("EFCoreSample.Data.Entities.DataGrid", null)
                        .WithMany("WordOnGrids")
                        .HasForeignKey("DataGridId");

                    b.HasOne("EFCoreSample.Data.Entities.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreSample.Data.Entities.WordSet", "WordSet")
                        .WithMany()
                        .HasForeignKey("WordSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");

                    b.Navigation("WordSet");
                });

            modelBuilder.Entity("EFCoreSample.Data.Entities.DataGrid", b =>
                {
                    b.Navigation("CharacterOnGrids");

                    b.Navigation("WordOnGrids");
                });
#pragma warning restore 612, 618
        }
    }
}
